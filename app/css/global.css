/*
Hichem hamdaoui codix authentification project
*/
/* 
    Created on : 3 oct. 2017, 09:49:09
    Author     : hhamdaoui
*/
@font-face {
  font-family: 'robotoregular';
  src: url("../assets/fonts/Roboto-Regular-webfont.eot");
  src: url("../assets/fonts/Roboto-Regular-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/Roboto-Regular-webfont.woff2") format("woff2"), url("../assets/fonts/Roboto-Regular-webfont.woff") format("woff"), url("../assets/fonts/Roboto-Regular-webfont.ttf") format("truetype"), url("../assets/fonts/Roboto-Regular-webfont.svg#robotoregular") format("svg");
  font-weight: normal;
  font-style: normal; }

/* clearfix for floats */
/* mixin to reset ul */
/* mixins for font family and font size */
.itable {
  display: table;
  width: 100%;
  margin: 0 auto; }
  .itable .itableRowGrp {
    display: table-row-group; }
  .itable .itableRow {
    display: table-row; }
  .itable .itableCell {
    display: table-cell; }

.iblock {
  display: inline-block; }

/* flex for the win!!!!! */
.flexContainer {
  display: -ms-flexbox;
  display: flex; }
  .flexContainer.wrap {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .flexContainer.spaceBetween {
    -ms-flex-pack: justify;
        justify-content: space-between; }

.vAlignMid {
  vertical-align: middle; }

.vAlignTop {
  vertical-align: top; }

.vAlignBot {
  vertical-align: bottom; }

.ifloat {
  float: left; }

.ifloatRight {
  float: right; }

.iNofloat {
  float: none; }

.half-w {
  width: 50%; }

.full-w {
  width: 100%; }

.full-h {
  height: 100%; }

.paddL-10 {
  padding-left: 10px; }

.pos-a {
  position: absolute; }

.pos-r {
  position: relative; }

.pos-s {
  position: fixed !important; }

.clearMargPadd {
  margin: 0;
  padding: 0; }

.clearBtn {
  border: 0;
  background: none; }

.clearBoth {
  clear: both; }

.clearFloat {
  clear: both;
  width: 100%;
  height: 1px; }

.parentClearBoth::after {
  content: '';
  display: block;
  clear: both; }

.overflow-hidden {
  overflow: hidden; }

.text-linethrough {
  text-decoration: line-through; }

/*
Meant to put css which will be used different part of the site/sections
and to override bootstrap element globally
*/
.btn-danger,
.btn-default,
.btn-info,
.btn-primary,
.btn-success,
.btn-warning {
  text-shadow: none;
  box-shadow: none; }

.overlap_imgContainer_centered {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }

.noMargin {
  margin: 0 !important; }

.coverP {
  margin-bottom: 0;
  font-size: 1em; }

.resetList {
  list-style: none;
  padding: 0;
  margin: 0; }

.resetBtn {
  -webkit-appearance: initial;
     -moz-appearance: initial;
          appearance: initial;
  padding: 0;
  margin: 0;
  background: none;
  border: 0; }

/*class for text*/
.text-uppercase {
  text-transform: uppercase; }

.text-center {
  text-align: center; }

.inline-block {
  display: inline-block; }

.block {
  display: block; }

.removearrow {
  -webkit-appearance: none;
  -moz-appearance: none;
  -o-appearance: none; }

.removearrow::-ms-expand {
  display: none; }

@font-face {
  font-family: 'robotoregular';
  src: url("../assets/fonts/Roboto-Regular-webfont.eot");
  src: url("../assets/fonts/Roboto-Regular-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/Roboto-Regular-webfont.woff2") format("woff2"), url("../assets/fonts/Roboto-Regular-webfont.woff") format("woff"), url("../assets/fonts/Roboto-Regular-webfont.ttf") format("truetype"), url("../assets/fonts/Roboto-Regular-webfont.svg#robotoregular") format("svg");
  font-weight: normal;
  font-style: normal; }

/* ng-cloak */
/* Removed width:auto from navbar-collapse classs; */
body {
  font-size: 10px;
  font-family: 'robotoregular', sans-serif;
  font-style: normal;
  font-weight: normal; }
  body header {
    background-color: rgba(255, 255, 255, 0.9);
    border-bottom: 1px solid #E8E8E8;
    height: 8rem; }
    @media (max-width: 767px) {
      body header {
        height: 11.5rem; } }
    body header .navbar-fixed-top {
      position: relative; }
    body header .bloc-1-container {
      height: 8rem;
      display: table;
      width: 100%; }
      @media (max-width: 767px) {
        body header .bloc-1-container {
          height: auto; } }
      body header .bloc-1-container .img-container {
        display: table-cell;
        vertical-align: middle; }
        @media (max-width: 767px) {
          body header .bloc-1-container .img-container {
            text-align: center; } }
        body header .bloc-1-container .img-container img {
          width: 31.5rem; }
          @media (max-width: 767px) {
            body header .bloc-1-container .img-container img {
              width: 21rem; } }
    body header .bloc-2-container {
      height: 8rem;
      display: table;
      width: 100%; }
      @media (max-width: 767px) {
        body header .bloc-2-container {
          height: 69px; } }
      body header .bloc-2-container .bloc-wrapper {
        display: table-cell;
        vertical-align: middle; }
        body header .bloc-2-container .bloc-wrapper h1 {
          text-align: center;
          font-size: 25px;
          color: #1197d5;
          max-width: 320px;
          float: right; }
          @media (max-width: 767px) {
            body header .bloc-2-container .bloc-wrapper h1 {
              font-size: 21px;
              float: none;
              max-width: none;
              width: auto; } }
  body main {
    margin-top: 2rem; }

[ng\:cloak] {
  display: none; }

[ng-cloak] {
  display: none; }

[data-ng-cloak] {
  display: none; }

[x-ng-cloak] {
  display: none; }

.ng-cloak {
  display: none; }

.x-ng.ng-cloak {
  display: none; }

ul {
  list-style: none; }

a {
  color: #333; }
  a:hover {
    cursor: pointer; }

ul.simple-post-list {
  list-style: none;
  margin: 0;
  padding: 0; }
  ul.simple-post-list .post-image {
    float: left;
    margin-right: 12px; }

.callout-box {
  background-color: #546489;
  color: #fff;
  padding: 10px 20px; }

.body-title {
  border: 1px solid #e3e3e3;
  border-left: 5px solid #234383;
  padding: 0 20px 20px; }

.featured-box {
  border: 1px solid #e3e3e3;
  border-top: 5px solid #234383;
  padding: 0 20px 20px; }

.breadcrumbs {
  position: relative;
  border-bottom: 1px solid #E5E5E5;
  background-color: #F5F5F5; }

.breadcrumb {
  margin-bottom: 0; }

.cart-btn {
  border-radius: 0; }

.navbar {
  border-radius: 0; }

.navbar-collapse {
  border-top: 0;
  box-shadow: none; }

.form-group-addon {
  padding-left: -20px; }

.errorMessage {
  color: red; }

input.ng-invalid.ng-dirty {
  border-color: red; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
